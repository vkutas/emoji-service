name: Build and Push Dokcerimage to docker hub
on:
  push:
    tags:
      - '*-release'

jobs:
  run_tests:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@master

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: Install requirements
        run: pip install -r app/requirements.txt
             pip install pylint

      - name: Run pylint on app sources
        run: pylint --fail-under=8 app/src/* 

      - name: Run pylint on test sources
        run: pylint --fail-under=3 app/tests/* 

      - name: Run tests
        run: coverage run app/tests/tests.py

      - name: Tests report
        run: coverage report
        
  buld_and_push:
    runs-on: [ubuntu-latest]
    needs: [run_tests]

    steps:
  
    - name: Get image tag
      id: get_version_v1
      run: echo ::set-output name=TAG::${GITHUB_REF##*/}

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_HUB_LOGIN }}
        password: ${{ secrets.DOCKER_HUB_PASS }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ secrets.DOCKER_HUB_LOGIN }}/${{ secrets.DOCKER_HUB_REPO }}:${{ steps.get_version_v1.outputs.TAG }}
  
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
  runs-on: [ubuntu-latest]
  needs: [buld_and_push]
  steps:        
    - name: Send webhook for deploy
      run: "curl -s -S -f -X POST ${{ secrets.DEPLOYMENT_SERVER }} -H 'Authorization: ${{ secrets.DEPLOYMENT_TOKEN }}' -H 'Content-Type: application/json' -d '{\"owner\": \"${{ secrets.DOCKER_HUB_LOGIN }}\", \"repository\": \"${{ secrets.DOCKER_HUB_REPO }}\", \"tag\": \"${GITHUB_REF##*/}\"}'"

